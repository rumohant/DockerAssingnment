Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

If you can't install or configure Docker, you can use the online docker setup to do the assignment.
Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground

https://www.katacoda.com/courses/docker/deploying-first-container
Step2 Click on "continue" button on the left panel
Step3 Click on "launch.sh" button on the left panel
Step4 From the right panel use the top console to execute below command:-
		docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list. Ans-----> docker image ls
4. Find out the "Full" ImageId of the image that you pulled and write it below.
5. Create a container of your image.... Ans--> docker create nginx
docker run -d nginx/ubuntu/redis/weaveworks/scope
6. List all the running containers......>>> docker ps 
7. List all the running and stopped containers... Ans---> docker ps -a
8. Find out the "Full" containerId of the container and write it below.   docker ps -q --no-trunc
9. Find out how many image layers are used to build this image. 
		Ans----> docker inspect nginx
		"RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:b67d19e65ef653823ed62a5835399c610a40e8205c16f839c5cc567954fcf594",
                "sha256:6eaad811af0237b78ba8b44a282d1564259d90007d628a032c5df7e3e2bbb613",
                "sha256:a89b8f05da3a2cbe459ef3fecfec8076fd0a7568db81f9164147b6f642e2dadf"
            ]
        },
10. Get the Apache Tomcat 7 server image from the docker hub. 
		Ans---> Docker pull tomcat:7
			Digest: sha256:9b9b01f50a953d3fe24e78404c66cae3372b446d5b162f42c1c64da7e2ec3f51
			Status: Downloaded newer image for tomcat:7
Status: Downloaded newer image for tomcat:7
11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
		Ans---> docker run -it -d tomcat:7
12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
		Ans---> docker inspect a201125378d4  (a201125378d4--> container id)
			"IPAddress": "172.18.0.2",

$ docker run -d -p  8080:8080 tomcat:7
then 			docker inspect tomcat:7
			docker run -it --rm -p 8888:8080 tomcat:7  (Changing port no)
13. Which Port it is using? ---> docker inspect tomcat:7

		"8081/tcp": [
                    {
                        "HostIp": "",
                        "HostPort": "8880"
                    }
                ]
            },
14. Try to access the Tomcat's home page from your machine/vm.  

	Ans---> http://3.133.102.67:8888
15. What is the disk size of Apache Tomcat image?
  
		Ans--->  $ docker image ls
			$ docker images tomcat              
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
tomcat              7                   e3a393545a10        2 weeks ago         506MB
ubuntu              latest              16508e5c265d        14 months ago       84.1MB
redis               latest              4e8db158f18d        15 months ago       83.4MB
weaveworks/scope    1.9.1               4b07159e407b        15 months ago       68MB
alpine              latest              11cd0b38bc3c        16 months ago       4.41MB


16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?

		Ans---> Docker inspect tomcat:7
"Env": [
                "PATH=/usr/local/tomcat/bin:/usr/local/openjdk-8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "LANG=C.UTF-8",
                "JAVA_HOME=/usr/local/openjdk-8",
                "JAVA_VERSION=8u232",
                "JAVA_BASE_URL=https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_",
                "JAVA_URL_VERSION=8u232b09",
                "CATALINA_HOME=/usr/local/tomcat",
                "TOMCAT_NATIVE_LIBDIR=/usr/local/tomcat/native-jni-lib",
                "LD_LIBRARY_PATH=/usr/local/tomcat/native-jni-lib",
                "GPG_KEYS=05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23",
                "TOMCAT_MAJOR=7",
                "TOMCAT_VERSION=7.0.96",
                "TOMCAT_SHA512=a7ab7627ebafab8c5e5b1b09cff3a6e760f45dbc9b9ab235e14532357e47cf3bb6bbcfbdd92cd94561fe471296fd734d221ba8d59e1216a8369d2c39b1a80c98"
            ],
17. Find out which port is exposed for tomcat?
	Ans---> Docker inspect tomcat:7
		 "ExposedPorts": {
               		 "8080/tcp": {}
           		 },

	
18. Run multiple conntainers of tomcat on different port and access it's home page.

		Ans---> docker run -it -d tomcat:7 (Will show what containers are there)
			docker run -it --rm -p 8881:8181 tomcat:7 (Change the pot here)

		Result--->
				$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS         NAMES
26bd6be92b1c        tomcat:7            "catalina.sh run"   24 seconds ago      Up 22 seconds       8080/tcp, 0.0.0.0:8881->8181/tcp   agitated_aryabhata
93862480136b        tomcat:7            "catalina.sh run"   4 minutes ago       Up 4 minutes        8080/tcp         fervent_gates


19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
		Ans---> docker pull ubuntu 	
		for creating new ubuntu--> docker pull ubuntu 18.04, docker pull ubuntu 14.04
		docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              18.04               775349758637        3 days ago          64.2MB
ubuntu              latest              775349758637        3 days ago          64.2MB
tomcat              7                   e3a393545a10        2 weeks ago         506MB
ubuntu              14.04               2c5e00d77a67        5 months ago        188MB
ubuntu              <none>              16508e5c265d        14 months ago       84.1MB
redis               latest              4e8db158f18d        15 months ago       83.4MB
20. Run the container of ubuntu in attached mode.

		Ans--->
				docker attach topmode
21. Run the container of another ubuntu in detached mode.
		  $ docker run -d --name topmode ubuntu /usr/bin/top -b (topmode--> container name)
		    docker run -d -p 8888:8080 tomcat:7---> 
		docker ps 
		
22. Check how many ubuntu containers are running and stopped
23. Is the tomcat container running? If no, start one.
			Ans----> Ans---> docker ps (if tomcat is not there pull it using "docker pull tomcat:7")
24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
		Ans---> running
26. Login as root user in ubuntu container

		Ans----> docker attach 09d86a2c69ec
		Result---> docker attach 09d86a2c69ec
27. Create a file with any name in root directory
		Ans---> root@09d86a2c69ec:/# touch demo
                        root@09d86a2c69ec:/# ls 
		Result---> $ docker start 09d86a2c69ec
09d86a2c69ec
$ docker attach 09d86a2c69ec
root@09d86a2c69ec:/# passwd
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully
root@09d86a2c69ec:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@09d86a2c69ec:/# vi demo.txt
bash: vi: command not found
root@09d86a2c69ec:/# touch demo
root@09d86a2c69ec:/# ls
bin  boot  demo  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@09d86a2c69ec:/#



28. Install software of your choice in ubuntu container using "apt-get install"

	Ans--> Installing Atom S/W(sudo apt install atom---> fecting some issue so installed " sudo snap install atom --classic" )
	
snap install atom

root@ip-172-31-31-224:/home/ubuntu# sudo snap install atom
error: This revision of snap "atom" was published using classic confinement and thus may perform
       arbitrary system changes outside of the security sandbox that snaps are usually confined to,
       which may put your system at risk.

       If you understand and want to proceed repeat the command including --classic.
root@ip-172-31-31-224:/home/ubuntu#
root@ip-172-31-31-224:/home/ubuntu# sudo snap install atom --classic
atom 1.41.0 from Snapcrafters installed
root@ip-172-31-31-224:/home/ubuntu# ls -la
total 40
drwxr-xr-x 5 ubuntu ubuntu 4096 Nov  6 07:05 .
drwxr-xr-x 3 root   root   4096 Nov  6 06:19 ..
-rw------- 1 ubuntu ubuntu   41 Nov  6 09:26 .bash_history
-rw-r--r-- 1 ubuntu ubuntu  220 Apr  4  2018 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Apr  4  2018 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Nov  6 06:49 .cache
drwx------ 3 ubuntu ubuntu 4096 Nov  6 06:49 .gnupg
-rw-r--r-- 1 ubuntu ubuntu  807 Apr  4  2018 .profile
drwx------ 2 ubuntu ubuntu 4096 Nov  6 06:19 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Nov  6 06:50 .sudo_as_admin_successful
-rw-r--r-- 1 root   root     31 Nov  6 07:05 file.txt
root@ip-172-31-31-224:/home/ubuntu# atom
Command 'atom' is available in '/snap/bin/atom'
The command could not be located because '/snap/bin' is not included in the PATH environment variable.
atom: command not found
root@ip-172-31-31-224:/home/ubuntu# cd /snap/bin/
root@ip-172-31-31-224:/snap/bin# ls -la
total 8
drwxr-xr-x 2 root root 4096 Nov  6 09:47 .
drwxr-xr-x 6 root root 4096 Nov  6 09:47 ..
lrwxrwxrwx 1 root root   13 Nov  6 06:19 amazon-ssm-agent.ssm-cli -> /usr/bin/snap
lrwxrwxrwx 1 root root    8 Nov  6 09:47 apm -> atom.apm
lrwxrwxrwx 1 root root   13 Nov  6 09:47 atom -> /usr/bin/snap
lrwxrwxrwx 1 root root   13 Nov  6 09:47 atom.apm -> /usr/bin/snap

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.

	Ans---> docker run -it ubuntu and then type "exit", it will redirect to ubuntu host machine.
	Result--->

	root@ip-172-31-31-224:/home/ubuntu# docker run -it ubuntu
root@aa63f46e83d6:/# ls -la
total 72
drwxr-xr-x   1 root root 4096 Nov  6 10:37 .
drwxr-xr-x   1 root root 4096 Nov  6 10:37 ..
-rwxr-xr-x   1 root root    0 Nov  6 10:37 .dockerenv
drwxr-xr-x   2 root root 4096 Oct 29 21:25 bin
drwxr-xr-x   2 root root 4096 Apr 24  2018 boot
drwxr-xr-x   5 root root  360 Nov  6 10:37 dev
drwxr-xr-x   1 root root 4096 Nov  6 10:37 etc
drwxr-xr-x   2 root root 4096 Apr 24  2018 home
drwxr-xr-x   8 root root 4096 May 23  2017 lib
drwxr-xr-x   2 root root 4096 Oct 29 21:25 lib64
drwxr-xr-x   2 root root 4096 Oct 29 21:25 media
drwxr-xr-x   2 root root 4096 Oct 29 21:25 mnt
drwxr-xr-x   2 root root 4096 Oct 29 21:25 opt
dr-xr-xr-x 112 root root    0 Nov  6 10:37 proc
drwx------   2 root root 4096 Oct 29 21:25 root
drwxr-xr-x   1 root root 4096 Oct 31 22:20 run
drwxr-xr-x   1 root root 4096 Oct 31 22:20 sbin
drwxr-xr-x   2 root root 4096 Oct 29 21:25 srv
dr-xr-xr-x  13 root root    0 Nov  6 10:37 sys
drwxrwxrwt   2 root root 4096 Oct 29 21:25 tmp
drwxr-xr-x   1 root root 4096 Oct 29 21:25 usr
drwxr-xr-x   1 root root 4096 Oct 29 21:25 var
root@aa63f46e83d6:/# exit
exit
root@ip-172-31-31-224:/home/ubuntu#

30. Check if the ubuntu container is running. (No)
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
	Ans--> 	docker create ubuntu
		docker ps -a
		 docker start aa63f46e83d6
		 docker attach aa63f46e83d6
root@ip-172-31-31-224:/home/ubuntu# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              775349758637        5 days ago          64.2MB
tomcat              7                   e3a393545a10        2 weeks ago         506MB
root@ip-172-31-31-224:/home/ubuntu# docker create ubuntu
caf80554e855445f7600b557c6bff8bc68a5e3fc89c7ba2c08ef6f88f2a41cc7
root@ip-172-31-31-224:/home/ubuntu# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                        PORTS               NAMES
caf80554e855        ubuntu              "/bin/bash"         12 seconds ago      Created                                           crazy_shirley
aa63f46e83d6        ubuntu              "/bin/bash"         10 minutes ago      Exited (127) 47 seconds ago                       frosty_antonelli
41f1e729eed6        tomcat:7            "catalina.sh run"   4 hours ago         Exited (143) 4 hours ago                          reverent_chatelet
root@ip-172-31-31-224:/home/ubuntu# docker attach caf80554e855
You cannot attach to a stopped container, start it first
root@ip-172-31-31-224:/home/ubuntu# dcoker start caf80554e855

Command 'dcoker' not found, did you mean:

  command 'docker' from snap docker (18.06.1-ce)
  command 'docker' from deb docker.io

See 'snap info <snapname>' for additional versions.

root@ip-172-31-31-224:/home/ubuntu# docker attach caf80554e855
You cannot attach to a stopped container, start it first

	
32. Login as a root user. 

	Ans--> Alredy logged in---> root@ip-172-31-31-224	
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.

	Ans----> First install VI editor s/w
		apt-get update
		apt-get -y install vim
		vi rutujaFile.txt (Created file inide ubuntu)

root@05ed2d0786d4:/# ls -la
total 88
drwxr-xr-x   1 root root 4096 Nov  6 10:54 .
drwxr-xr-x   1 root root 4096 Nov  6 10:54 ..
-rwxr-xr-x   1 root root    0 Nov  6 10:54 .dockerenv
drwxr-xr-x   2 root root 4096 Oct 29 21:25 bin
drwxr-xr-x   2 root root 4096 Apr 24  2018 boot
drwxr-xr-x   5 root root  360 Nov  6 10:54 dev
drwxr-xr-x   1 root root 4096 Nov  6 10:58 etc
drwxr-xr-x   2 root root 4096 Apr 24  2018 home
drwxr-xr-x   1 root root 4096 May 23  2017 lib
drwxr-xr-x   2 root root 4096 Oct 29 21:25 lib64
drwxr-xr-x   2 root root 4096 Oct 29 21:25 media
drwxr-xr-x   2 root root 4096 Oct 29 21:25 mnt
drwxr-xr-x   2 root root 4096 Oct 29 21:25 opt
dr-xr-xr-x 112 root root    0 Nov  6 10:54 proc
drwx------   2 root root 4096 Oct 29 21:25 root
drwxr-xr-x   1 root root 4096 Oct 31 22:20 run
drwxr-xr-x   1 root root 4096 Oct 31 22:20 sbin
drwxr-xr-x   2 root root 4096 Oct 29 21:25 srv
dr-xr-xr-x  13 root root    0 Nov  6 10:37 sys
drwxrwxrwt   1 root root 4096 Nov  6 10:58 tmp
drwxr-xr-x   1 root root 4096 Oct 29 21:25 usr
drwxr-xr-x   1 root root 4096 Oct 29 21:25 var
root@05ed2d0786d4:/# vi rutujafile.txt
root@05ed2d0786d4:/# ls -la
total 92
drwxr-xr-x   1 root root 4096 Nov  6 11:02 .
drwxr-xr-x   1 root root 4096 Nov  6 11:02 ..
-rwxr-xr-x   1 root root    0 Nov  6 10:54 .dockerenv
drwxr-xr-x   2 root root 4096 Oct 29 21:25 bin
drwxr-xr-x   2 root root 4096 Apr 24  2018 boot
drwxr-xr-x   5 root root  360 Nov  6 10:54 dev
drwxr-xr-x   1 root root 4096 Nov  6 10:58 etc
drwxr-xr-x   2 root root 4096 Apr 24  2018 home
drwxr-xr-x   1 root root 4096 May 23  2017 lib
drwxr-xr-x   2 root root 4096 Oct 29 21:25 lib64
drwxr-xr-x   2 root root 4096 Oct 29 21:25 media
drwxr-xr-x   2 root root 4096 Oct 29 21:25 mnt
drwxr-xr-x   2 root root 4096 Oct 29 21:25 opt
dr-xr-xr-x 110 root root    0 Nov  6 10:54 proc
drwx------   1 root root 4096 Nov  6 11:02 root
drwxr-xr-x   1 root root 4096 Oct 31 22:20 run
-rw-r--r--   1 root root   15 Nov  6 11:02 rutujafile.txt
drwxr-xr-x   1 root root 4096 Oct 31 22:20 sbin
drwxr-xr-x   2 root root 4096 Oct 29 21:25 srv
dr-xr-xr-x  13 root root    0 Nov  6 10:37 sys
drwxrwxrwt   1 root root 4096 Nov  6 10:58 tmp
drwxr-xr-x   1 root root 4096 Oct 29 21:25 usr
drwxr-xr-x   1 root root 4096 Oct 29 21:25 var
root@05ed2d0786d4:/# exit
exit


34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.

	Ans---> Yes I have created file and installed Vi editor Sw

35. Create an Image out of the existing container.
36. Now Cr	eate a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a -----> 
	ubuntu@ip-172-31-31-224:~$ docker images -a
	REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
	ubuntu              latest              775349758637        6 days ago          64.2MB
	tomcat              7                   e3a393545a10        2 weeks ago         506MB

2. -f
3. -q  
	---> ubuntu@ip-172-31-31-224:~$ docker images -q
	775349758637
	e3a393545a10


write atleast 1 command using each option above and prove their concepts as described in the --help.


40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
	docker pa -a
	ubuntu@ip-172-31-31-224:~$ docker ps -a
CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS                        PORTS               NAMES
12845801aac8        ubuntu              "/usr/bin/ top -b"   9 minutes ago       Created                                           topdemo01
54ca73def134        ubuntu              "/bin/bash"          17 minutes ago      Exited (0) 15 minutes ago                         bold_gould
a662bce10112        ubuntu              "/bin/bash"          31 minutes ago      Exited (127) 9 minutes ago                        con1
432b5feb2c87        ubuntu              "/bin/bash"          47 minutes ago      Exited (0) 33 minutes ago                         bold_keldysh
5437e2dcf25a        ubuntu              "/bin/bash"          24 hours ago        Exited (127) 51 minutes ago                       modest_blackwell
05ed2d0786d4        ubuntu              "/bin/bash"          24 hours ago        Exited (0) 24 hours ago                           pensive_antonelli
caf80554e855        ubuntu              "/bin/bash"          24 hours ago        Created                                           crazy_shirley
aa63f46e83d6        ubuntu              "/bin/bash"          24 hours ago        Exited (127) 24 hours ago                         frosty_antonelli
41f1e729eed6        tomcat:7            "catalina.sh run"    28 hours ago        Exited (143) 28 hours ago                         reverent_chatelet

2. -f
3. -q  -> continer id were not coming
4. -n
5. -l
	ubuntu@ip-172-31-31-224:~$ docker ps -l
CONTAINER ID        IMAGE               COMMAND              CREATED             STATUS              PORTS               NAMES
12845801aac8        ubuntu              "/usr/bin/ top -b"   10 minutes ago      Created                                 topdemo01

6. -s
ubuntu@ip-172-31-31-224:~$ docker ps -s
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES               SIZE



